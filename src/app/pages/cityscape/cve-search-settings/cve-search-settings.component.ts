import {Component, OnInit} from '@angular/core';
import {CveSearchSettingsDTO} from '../../../dtos/cityscape/cve_search/cve-search-settings-dto';
import {CveSearchSettingsService} from '../../../services/crud/cityscape/cve-search-settings.service';
import {PageComponent} from '../../sofia/page/page-component';
import {ActivatedRoute} from '@angular/router';
import {NotificationService} from '../../../services/system/sofia/notification.service';

@Component({
  selector: 'app-cve-search-settings',
  templateUrl: './cve-search-settings.component.html',
  styleUrls: ['./cve-search-settings.component.css']
})
export class CveSearchSettingsComponent extends PageComponent implements OnInit {

  public dto: CveSearchSettingsDTO;
  public vendorTableName: string;

  constructor(private service: CveSearchSettingsService,
              private activatedRoute: ActivatedRoute,
              private notificationService: NotificationService) {
    super();
  }

  ngOnInit(): void {
    this.initNav(this.activatedRoute);
    this.dto = new CveSearchSettingsDTO();

    this.service.getSettings().subscribe(data => {
      this.dto = data;
      this.vendorTableName = this.dto.vendorTableName;
    });
  }

  save() {
    this.service.save(this.dto).subscribe(data => {

      this.vendorTableName = this.dto.vendorTableName;

      this.notificationService
        .showNotification('top', 'center', 'alert-info', 'fa-save', '<b>Data is saved</b>');
    });
  }

  syncVendors() {
    if (this.vendorTableName !== this.dto.vendorTableName) {
      this.notificationService
        .showNotification('top',
          'center',
          'alert-danger',
          'fa-exclamation-triangle',
          '<b>Vendor table name is changed, save first & then sync</b>');
      return;
    }

    if (this.dto.vendorTableName == null || this.dto.vendorTableName === undefined || this.dto.vendorTableName === '') {
      this.notificationService
        .showNotification('top',
          'center',
          'alert-danger',
          'fa-exclamation-triangle',
          '<b>Vendor table name cannot be empty</b>');
      return;
    }

    this.service.updateVendors().subscribe(data => {
      this.notificationService
        .showNotification('top', 'center', 'alert-info', 'fa-save', '<b>Vendors are updated on the backend.</b>');
    });
  }

}
